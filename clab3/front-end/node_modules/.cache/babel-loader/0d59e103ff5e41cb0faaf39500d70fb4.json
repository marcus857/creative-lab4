{"remainingRequest":"/Users/richardmprice/Desktop/CS260/creative-lab4/clab3/front-end/node_modules/babel-loader/lib/index.js!/Users/richardmprice/Desktop/CS260/creative-lab4/clab3/front-end/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/richardmprice/Desktop/CS260/creative-lab4/clab3/front-end/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/richardmprice/Desktop/CS260/creative-lab4/clab3/front-end/src/views/CreateDeck.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/richardmprice/Desktop/CS260/creative-lab4/clab3/front-end/src/views/CreateDeck.vue","mtime":1617764264566},{"path":"/Users/richardmprice/Desktop/CS260/creative-lab4/clab3/front-end/node_modules/cache-loader/dist/cjs.js","mtime":1617734818995},{"path":"/Users/richardmprice/Desktop/CS260/creative-lab4/clab3/front-end/node_modules/babel-loader/lib/index.js","mtime":1617734818854},{"path":"/Users/richardmprice/Desktop/CS260/creative-lab4/clab3/front-end/node_modules/cache-loader/dist/cjs.js","mtime":1617734818995},{"path":"/Users/richardmprice/Desktop/CS260/creative-lab4/clab3/front-end/node_modules/vue-loader/lib/index.js","mtime":1617734823903}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["CreateDeck.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n<div>\n  <div class=\"wrapper\">\n    <div class=\"search\">\n      <form class=\"pure-form\">\n        <i class=\"fas fa-search\"></i><input v-model=\"searchText\" />\n      </form>\n      \n    </div>\n  </div>\n  <p> Create and name custom decks and add cards to them by clicking on them. The deck name in red is the one you are adding cards to and you can add 1 of each by clicking on the standard deck button.</p>\n\n\n\n  <ProductList :products=\"products\" />\n</div>\n</template>\n\n\n<script>\nimport axios from 'axios';\nimport ProductList from \"../components/ProductList.vue\"\nexport default {\n  name: 'Home',\n  components: {\n    ProductList\n  },\n    data() {\n    return {\n      searchText: '',\n      projects: [],\n      project: null,\n      projectName: '',\n      items: [],\n\n    }\n  },\n    created() {\n    this.getProjects();\n  },\n\n   methods: {\n          async addProject() {\n      try {\n        await axios.post(\"/api/projects\", {\n          name: this.projectName,\n        });\n        await this.getProjects();\n      } catch (error) {\n        console.log(error);\n      }\n    },\n\n        async getProjects() {\n      try {\n        const response = await axios.get(\"/api/projects\");\n        this.projects = response.data;\n      } catch (error) {\n        console.log(error);\n      }\n    },\n        selectProject(project) {\n      this.project = project;\n      this.getItems();\n    },\n\n\n\n\n    async getItems() {\n      try {\n        const response = await axios.get(`/api/projects/${this.project._id}/items`);\n        this.items = response.data;\n      } catch (error) {\n        console.log(error);\n      }\n    },\n\n    async addItem(product) {\n        this.$root.$data.addedCard = product.name\n      try {\n        await axios.post(`/api/projects/${this.project._id}/items`, {\n          \n          id: product.id,\n          name: product.name,\n          points: product.points,\n          country: product.country,\n          image: product.image,\n \n        });\n        \n        this.name = \"\";\n        this.getItems();\n      } catch (error) {\n        console.log(error);\n      }\n    },\n\n       async completeItem(item) {\n      try {\n        axios.put(`/api/projects/${this.project._id}/items/${item._id}`, {\n          text: item.text,\n          completed: !item.completed,\n        });\n        this.getItems();\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    async deleteItem(item) {\n      try {\n        await axios.delete(`/api/projects/${this.project._id}/items/${item._id}`);\n        this.getItems();\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    showAll() {\n      this.show = 'all';\n    },\n    showActive() {\n      this.show = 'active';\n    },\n    showCompleted() {\n      this.show = 'completed';\n    },\n    deleteCompleted() {\n      this.items.forEach(item => {\n        if (item.completed)\n          this.deleteItem(item);\n      });\n    },\n\n\n    active(project) {\n      return (this.project && project._id === this.project._id);\n    },\n\n      addProductToCart (product) {\n        this.$root.$data.cart.push(product)\n        this.$root.$data.addedCard = product.name\n      },\n       AddAllToDeck () {\n\n          for (var i = 0; i < this.$root.$data.products.length; i++) {\n          this.addItem(this.$root.$data.products[i])\n          this.$root.$data.addedCard = \"Standard Deck Added\"\n          }\n       }\n    },\n\ncomputed: {\n  products() {\n    return this.$root.$data.products.filter(product => product.name.toLowerCase().search(this.searchText.toLowerCase()) >= 0);\n  }\n  },\n      activeItems() {\n      return this.items.filter(item => {\n        return !item.completed;\n      });\n    },\n    filteredItems() {\n      if (this.show === 'active')\n        return this.items.filter(item => {\n          return !item.completed;\n        });\n      if (this.show === 'completed')\n        return this.items.filter(item => {\n          return item.completed;\n        });\n      return this.items;\n    },\n        cart() {\n      return this.$root.$data.cart.length;\n    },\n  \n}\n</script>\n\n\n<style scoped>\n.wrapper {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.search {\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  width: 50%;\n}\n\nform {\n  display: table;\n  width: 100%;\n}\n\ni {\n  display: table-cell;\n  padding-left: 10px;\n  width: 1px;\n}\n\ninput {\n  display: table-cell;\n  font-size: 20px;\n  border: none !important;\n  box-shadow: none !important;\n  width: 100%;\n  height: 40px;\n}\n</style>\n"],"sourceRoot":"src/views"}]}